{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Template for Lambda Sample.",
    "Parameters": {
        "SourceName": {
            "Description": "API Name",
            "Type": "String"
        },
        "ApplicationName": {
            "Description": "Application Name",
            "Type": "String"
        },
        "Env": {
            "Description": "Environment",
            "Type": "String"
        },
        "TelegramBotToken": {
            "Type": "String",
            "NoEcho": "true"
        },
        "TelegramChatId": {
            "Type": "String",
            "NoEcho": "true"
        },
        "MyGarminPassword": {
            "Type": "String",
            "NoEcho": "true"
        },
        "MyEmailAddress": {
            "Type": "String",
            "NoEcho": "true"
        },
        "AwsAccessKey": {
            "Type": "String",
            "NoEcho": "true"
        },
        "AwsSecretAccessKey": {
            "Type": "String",
            "NoEcho": "true"
        },
        "AwsS3BucketName": {
            "Type": "String",
            "NoEcho": "true"
        },
        "AwsS3LambdaFolderKey": {
            "Type": "String",
            "NoEcho": "true"
        },
        "AwsS3LambdaGarminFilename": {
            "Type": "String",
            "NoEcho": "true"
        },
        "MongodbConnectionString": {
            "Type": "String",
            "NoEcho": "true"
        },
        "MongodbDatabase": {
            "Type": "String",
            "NoEcho": "true"
        },
        "BulletinEmailAddress": {
            "Type": "String",
            "NoEcho": "true"
        },
        "BulletEmailAddressAppPassword": {
            "Type": "String",
            "NoEcho": "true"
        },
        "RecEmail": {
            "Type": "String",
            "NoEcho": "true"
        },
        "RunningMapPath": {
            "Type": "String",
            "NoEcho": "true"
        },
        "GoogleApiKey": {
            "Type": "String",
            "NoEcho": "true"
        },
        "GoogleMapsApiPath": {
            "Type": "String",
            "NoEcho": "true"
        },
        "CommonLayerArn": {
            "Type": "String"
        }

    },
    "Resources": {
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "${ApplicationName}${SourceName}LambdaIam${Env}"
                },
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSLambdaExecute",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AmazonKinesisFullAccess"
                ],
                "Path": "/"
            }
        },
        "LambdaLibsLayer": {
            "Type": "AWS::Serverless::LayerVersion",
            "Properties": {
                "CompatibleRuntimes": [
                    "python3.12",
                    "python3.11"
                ],
                "ContentUri": "layers/libs",
                "Description": "Libraries for Garmin Statistics Lambda",
                "LayerName": {
                    "Fn::Sub": "${ApplicationName}${SourceName}LambaLib${Env}"
                },
                "LicenseInfo": "MIT"
            }
        },
        "LambdaUtilsLayer": {
            "Type": "AWS::Serverless::LayerVersion",
            "Properties": {
                "CompatibleRuntimes": [
                    "python3.12",
                    "python3.11"
                ],
                "ContentUri": "layers/helper_functions",
                "Description": "Helper Modules for Garmin Statistics Lambda",
                "LayerName": {
                    "Fn::Sub": "${ApplicationName}${SourceName}LambaModules${Env}"
                },
                "LicenseInfo": "MIT"
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "FunctionName": {
                    "Fn::Sub": "${ApplicationName}-${SourceName}-statistics-${Env}"
                },
                "Description": "Lambda Function to pull statistics from Garmin API",
                "Runtime": "python3.12",
                "CodeUri": "lambda",
                "Handler": "LambdaFunction.LambdaHandler",
                "MemorySize": 128,
                "Timeout": 300,
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaRole",
                        "Arn"
                    ]
                },
                "Environment": {
                    "Variables": {
                        "Env": {
                            "Ref": "Env"
                        },
                        "TelegramBotToken": {
                            "Ref": "TelegramBotToken"
                        },
                        "TelegramChatId": {
                            "Ref": "TelegramChatId"
                        },
                        "MyGarminPassword": {
                            "Ref": "MyGarminPassword"
                        },
                        "MyEmailAddress": {
                            "Ref": "MyEmailAddress"
                        },
                        "AwsAccessKey": {
                            "Ref": "AwsAccessKey"
                        },
                        "AwsSecretAccessKey": {
                            "Ref": "AwsSecretAccessKey"
                        },
                        "AwsS3BucketName": {
                            "Ref": "AwsS3BucketName"
                        },
                        "AwsS3LambdaFolderKey": {
                            "Ref": "AwsS3LambdaFolderKey"
                        },
                        "AwsS3LambdaGarminFilename": {
                            "Ref": "AwsS3LambdaGarminFilename"
                        },
                        "MongodbConnectionString": {
                            "Ref": "MongodbConnectionString"
                        },
                        "MongodbDatabase": {
                            "Ref": "MongodbDatabase"
                        },
                        "BulletinEmailAddress": {
                            "Ref": "BulletinEmailAddress"
                        },
                        "BulletEmailAddressAppPassword": {
                            "Ref": "BulletEmailAddressAppPassword"
                        },
                        "RecEmail": {
                            "Ref": "RecEmail"
                        },
                        "RunningMapPath": {
                            "Ref": "RunningMapPath"
                        },
                        "GoogleApiKey": {
                            "Ref": "GoogleApiKey"
                        },
                        "GoogleMapsApiPath": {
                            "Ref": "GoogleMapsApiPath"
                        }
                    }
                },
                "Layers": [
                    {
                        "Fn::GetAtt": [
                            "LambdaLibsLayer",
                            "LayerVersionArn"
                        ]
                    },
                    {
                        "Fn::GetAtt": [
                            "LambdaUtilsLayer",
                            "LayerVersionArn"
                        ]
                    },
                    {
                        "Fn::Sub": "${CommonLayerArn}"
                    }
                ]
            },
            "DependsOn": [
                "LambdaRole",
                "LambdaLibsLayer"
            ]
        },
        "ScheduledRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${ApplicationName}${SourceName}EventRule${Env}"
                },
                "Description": "ScheduledRule",
                "ScheduleExpression": "cron(30 3 * * ? *)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "LambdaFunction",
                                "Arn"
                            ]
                        },
                        "Id": "LambdaFunction"
                    }
                ]
            },
            "DependsOn": "LambdaFunction"
        },
        "PermissionForEventsToInvokeLambda": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "LambdaFunction"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "ScheduledRule",
                        "Arn"
                    ]
                }
            },
            "DependsOn": "LambdaFunction"
        },
        "LambdaRolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": {
                    "Fn::Sub": "${ApplicationName}${SourceName}LambdaPolicy${Env}"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "BasePermissions",
                            "Effect": "Allow",
                            "Action": [
                                "secretsmanager:*",
                                "cloudformation:CreateChangeSet",
                                "cloudformation:DescribeChangeSet",
                                "cloudformation:DescribeStackResource",
                                "cloudformation:DescribeStacks",
                                "cloudformation:ExecuteChangeSet",
                                "docdb-elastic:GetCluster",
                                "docdb-elastic:ListClusters",
                                "ec2:DescribeSecurityGroups",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeVpcs",
                                "kms:DescribeKey",
                                "kms:ListAliases",
                                "kms:ListKeys",
                                "lambda:ListFunctions",
                                "rds:DescribeDBClusters",
                                "rds:DescribeDBInstances",
                                "redshift:DescribeClusters",
                                "redshift-serverless:ListWorkgroups",
                                "redshift-serverless:GetNamespace",
                                "tag:GetResources"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Sid": "LambdaPermissions",
                            "Effect": "Allow",
                            "Action": [
                                "lambda:AddPermission",
                                "lambda:CreateFunction",
                                "lambda:GetFunction",
                                "lambda:InvokeFunction",
                                "lambda:UpdateFunctionConfiguration"
                            ],
                            "Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
                        },
                        {
                            "Sid": "SARPermissions",
                            "Effect": "Allow",
                            "Action": [
                                "serverlessrepo:CreateCloudFormationChangeSet",
                                "serverlessrepo:GetApplication"
                            ],
                            "Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
                        },
                        {
                            "Sid": "S3Permissions",
                            "Effect": "Allow",
                            "Action": [
                                "s3:GetObject"
                            ],
                            "Resource": [
                                "arn:aws:s3:::awsserverlessrepo-changesets*",
                                "arn:aws:s3:::secrets-manager-rotation-apps-*/*"
                            ]
                        }
                    ]
                },
                "Roles": [
                    {
                        "Ref": "LambdaRole"
                    }
                ]
            }
        }
    }
}